#############################################################################
# Makefile for building: robojournal
# Generated by qmake (2.01a) (Qt 4.8.4) on: Sun Jun 8 11:15:42 2014
# Project:  robojournal.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile robojournal.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtWebKit -lQtSql -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		ui/mainwindow.cpp \
		core/buffer.cpp \
		ui/editor.cpp \
		ui/dblogin.cpp \
		sql/mysqlcore.cpp \
		sql/psqlcore.cpp \
		sql/sqlitecore.cpp \
		ui/aboutrj.cpp \
		ui/firstrun.cpp \
		ui/tagger.cpp \
		ui/journalselector.cpp \
		ui/entryexporter.cpp \
		ui/newconfig.cpp \
		core/settingsmanager.cpp \
		ui/configurationgeneral.cpp \
		ui/configurationjournal.cpp \
		ui/configurationmysql.cpp \
		ui/configurationappearance.cpp \
		ui/configurationeditor.cpp \
		ui/configurationexport.cpp \
		ui/exportpreview.cpp \
		sql/sqlshield.cpp \
		ui/tagreminder.cpp \
		ui/newjournalcreator.cpp \
		ui/mysqljournalpage.cpp \
		ui/sqlitejournalpage.cpp \
		ui/journalcreatorcoverpage.cpp \
		ui/configurationsqlite.cpp \
		ui/editortagmanager.cpp \
		core/taggingshared.cpp \
		core/htmlcore.cpp \
		ui/permissionmanager.cpp \
		ui/outputpane.cpp \
		core/favoritecore.cpp \
		ui/exportsingle.cpp \
		ui/exportmulti.cpp \
		ui/exportcreatedump.cpp \
		ui/customwords.cpp \
		core/hunspell/spellchecker.cpp \
		core/hunspell/suggestmgr.cxx \
		core/hunspell/replist.cxx \
		core/hunspell/phonet.cxx \
		core/hunspell/hunzip.cxx \
		core/hunspell/hunspell.cxx \
		core/hunspell/hashmgr.cxx \
		core/hunspell/filemgr.cxx \
		core/hunspell/dictmgr.cxx \
		core/hunspell/csutil.cxx \
		core/hunspell/affixmgr.cxx \
		core/hunspell/affentry.cxx \
		core/hunspell/ctextcheckeredit.cpp \
		core/hunspell/ctextsyntaxhighlighter.cpp moc_mainwindow.cpp \
		moc_editor.cpp \
		moc_dblogin.cpp \
		moc_aboutrj.cpp \
		moc_firstrun.cpp \
		moc_tagger.cpp \
		moc_journalselector.cpp \
		moc_entryexporter.cpp \
		moc_newconfig.cpp \
		moc_configurationgeneral.cpp \
		moc_configurationjournal.cpp \
		moc_configurationmysql.cpp \
		moc_configurationappearance.cpp \
		moc_configurationeditor.cpp \
		moc_configurationexport.cpp \
		moc_exportpreview.cpp \
		moc_tagreminder.cpp \
		moc_newjournalcreator.cpp \
		moc_mysqljournalpage.cpp \
		moc_sqlitejournalpage.cpp \
		moc_journalcreatorcoverpage.cpp \
		moc_configurationsqlite.cpp \
		moc_editortagmanager.cpp \
		moc_permissionmanager.cpp \
		moc_outputpane.cpp \
		moc_exportsingle.cpp \
		moc_exportmulti.cpp \
		moc_exportcreatedump.cpp \
		moc_customwords.cpp \
		moc_ctextcheckeredit.cpp \
		moc_ctextsyntaxhighlighter.cpp \
		qrc_images.cpp
OBJECTS       = main.o \
		mainwindow.o \
		buffer.o \
		editor.o \
		dblogin.o \
		mysqlcore.o \
		psqlcore.o \
		sqlitecore.o \
		aboutrj.o \
		firstrun.o \
		tagger.o \
		journalselector.o \
		entryexporter.o \
		newconfig.o \
		settingsmanager.o \
		configurationgeneral.o \
		configurationjournal.o \
		configurationmysql.o \
		configurationappearance.o \
		configurationeditor.o \
		configurationexport.o \
		exportpreview.o \
		sqlshield.o \
		tagreminder.o \
		newjournalcreator.o \
		mysqljournalpage.o \
		sqlitejournalpage.o \
		journalcreatorcoverpage.o \
		configurationsqlite.o \
		editortagmanager.o \
		taggingshared.o \
		htmlcore.o \
		permissionmanager.o \
		outputpane.o \
		favoritecore.o \
		exportsingle.o \
		exportmulti.o \
		exportcreatedump.o \
		customwords.o \
		spellchecker.o \
		suggestmgr.o \
		replist.o \
		phonet.o \
		hunzip.o \
		hunspell.o \
		hashmgr.o \
		filemgr.o \
		dictmgr.o \
		csutil.o \
		affixmgr.o \
		affentry.o \
		ctextcheckeredit.o \
		ctextsyntaxhighlighter.o \
		moc_mainwindow.o \
		moc_editor.o \
		moc_dblogin.o \
		moc_aboutrj.o \
		moc_firstrun.o \
		moc_tagger.o \
		moc_journalselector.o \
		moc_entryexporter.o \
		moc_newconfig.o \
		moc_configurationgeneral.o \
		moc_configurationjournal.o \
		moc_configurationmysql.o \
		moc_configurationappearance.o \
		moc_configurationeditor.o \
		moc_configurationexport.o \
		moc_exportpreview.o \
		moc_tagreminder.o \
		moc_newjournalcreator.o \
		moc_mysqljournalpage.o \
		moc_sqlitejournalpage.o \
		moc_journalcreatorcoverpage.o \
		moc_configurationsqlite.o \
		moc_editortagmanager.o \
		moc_permissionmanager.o \
		moc_outputpane.o \
		moc_exportsingle.o \
		moc_exportmulti.o \
		moc_exportcreatedump.o \
		moc_customwords.o \
		moc_ctextcheckeredit.o \
		moc_ctextsyntaxhighlighter.o \
		qrc_images.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		robojournal.pro
QMAKE_TARGET  = robojournal
DESTDIR       = 
TARGET        = robojournal

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_editor.h ui_dblogin.h ui_aboutrj.h ui_firstrun.h ui_tagger.h ui_journalselector.h ui_entryexporter.h ui_newconfig.h ui_configurationgeneral.h ui_configurationjournal.h ui_configurationmysql.h ui_configurationappearance.h ui_configurationeditor.h ui_configurationexport.h ui_exportpreview.h ui_tagreminder.h ui_newjournalcreator.h ui_mysqljournalpage.h ui_sqlitejournalpage.h ui_journalcreatorcoverpage.h ui_configurationsqlite.h ui_editortagmanager.h ui_permissionmanager.h ui_outputpane.h ui_exportsingle.h ui_exportmulti.h ui_exportcreatedump.h ui_customwords.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: robojournal.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtWebKit.prl \
		/usr/lib/x86_64-linux-gnu/libQtSql.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile robojournal.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtWebKit.prl:
/usr/lib/x86_64-linux-gnu/libQtSql.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile robojournal.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/robojournal1.0.0 || $(MKDIR) .tmp/robojournal1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/robojournal1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.h core/buffer.h ui/editor.h ui/dblogin.h sql/mysqlcore.h sql/psqlcore.h sql/sqlitecore.h ui/aboutrj.h ui/firstrun.h ui/tagger.h ui/journalselector.h ui/entryexporter.h ui/newconfig.h core/settingsmanager.h ui/configurationgeneral.h ui/configurationjournal.h ui/configurationmysql.h ui/configurationappearance.h ui/configurationeditor.h ui/configurationexport.h ui/exportpreview.h sql/sqlshield.h ui/tagreminder.h ui/newjournalcreator.h ui/mysqljournalpage.h ui/sqlitejournalpage.h ui/journalcreatorcoverpage.h ui/configurationsqlite.h ui/editortagmanager.h core/taggingshared.h core/htmlcore.h ui/permissionmanager.h ui/outputpane.h core/favoritecore.h ui/exportsingle.h ui/exportmulti.h ui/exportcreatedump.h ui/customwords.h core/hunspell/spellchecker.h core/hunspell/w_char.hxx core/hunspell/suggestmgr.hxx core/hunspell/replist.hxx core/hunspell/phonet.hxx core/hunspell/langnum.hxx core/hunspell/hunzip.hxx core/hunspell/hunvisapi.h core/hunspell/hunspell.hxx core/hunspell/hunspell.h core/hunspell/htypes.hxx core/hunspell/hashmgr.hxx core/hunspell/filemgr.hxx core/hunspell/dictmgr.hxx core/hunspell/csutil.hxx core/hunspell/baseaffix.hxx core/hunspell/atypes.hxx core/hunspell/affixmgr.hxx core/hunspell/affentry.hxx core/hunspell/ctextcheckeredit.h core/hunspell/ctextsyntaxhighlighter.h .tmp/robojournal1.0.0/ && $(COPY_FILE) --parents images.qrc .tmp/robojournal1.0.0/ && $(COPY_FILE) --parents main.cpp ui/mainwindow.cpp core/buffer.cpp ui/editor.cpp ui/dblogin.cpp sql/mysqlcore.cpp sql/psqlcore.cpp sql/sqlitecore.cpp ui/aboutrj.cpp ui/firstrun.cpp ui/tagger.cpp ui/journalselector.cpp ui/entryexporter.cpp ui/newconfig.cpp core/settingsmanager.cpp ui/configurationgeneral.cpp ui/configurationjournal.cpp ui/configurationmysql.cpp ui/configurationappearance.cpp ui/configurationeditor.cpp ui/configurationexport.cpp ui/exportpreview.cpp sql/sqlshield.cpp ui/tagreminder.cpp ui/newjournalcreator.cpp ui/mysqljournalpage.cpp ui/sqlitejournalpage.cpp ui/journalcreatorcoverpage.cpp ui/configurationsqlite.cpp ui/editortagmanager.cpp core/taggingshared.cpp core/htmlcore.cpp ui/permissionmanager.cpp ui/outputpane.cpp core/favoritecore.cpp ui/exportsingle.cpp ui/exportmulti.cpp ui/exportcreatedump.cpp ui/customwords.cpp core/hunspell/spellchecker.cpp core/hunspell/suggestmgr.cxx core/hunspell/replist.cxx core/hunspell/phonet.cxx core/hunspell/hunzip.cxx core/hunspell/hunspell.cxx core/hunspell/hashmgr.cxx core/hunspell/filemgr.cxx core/hunspell/dictmgr.cxx core/hunspell/csutil.cxx core/hunspell/affixmgr.cxx core/hunspell/affentry.cxx core/hunspell/ctextcheckeredit.cpp core/hunspell/ctextsyntaxhighlighter.cpp .tmp/robojournal1.0.0/ && $(COPY_FILE) --parents ui/mainwindow.ui ui/editor.ui ui/dblogin.ui ui/aboutrj.ui ui/firstrun.ui ui/tagger.ui ui/journalselector.ui ui/entryexporter.ui ui/newconfig.ui ui/configurationgeneral.ui ui/configurationjournal.ui ui/configurationmysql.ui ui/configurationappearance.ui ui/configurationeditor.ui ui/configurationexport.ui ui/exportpreview.ui ui/tagreminder.ui ui/newjournalcreator.ui ui/mysqljournalpage.ui ui/sqlitejournalpage.ui ui/journalcreatorcoverpage.ui ui/configurationsqlite.ui ui/editortagmanager.ui ui/permissionmanager.ui ui/outputpane.ui ui/exportsingle.ui ui/exportmulti.ui ui/exportcreatedump.ui ui/customwords.ui .tmp/robojournal1.0.0/ && (cd `dirname .tmp/robojournal1.0.0` && $(TAR) robojournal1.0.0.tar robojournal1.0.0 && $(COMPRESS) robojournal1.0.0.tar) && $(MOVE) `dirname .tmp/robojournal1.0.0`/robojournal1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/robojournal1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_editor.cpp moc_dblogin.cpp moc_aboutrj.cpp moc_firstrun.cpp moc_tagger.cpp moc_journalselector.cpp moc_entryexporter.cpp moc_newconfig.cpp moc_configurationgeneral.cpp moc_configurationjournal.cpp moc_configurationmysql.cpp moc_configurationappearance.cpp moc_configurationeditor.cpp moc_configurationexport.cpp moc_exportpreview.cpp moc_tagreminder.cpp moc_newjournalcreator.cpp moc_mysqljournalpage.cpp moc_sqlitejournalpage.cpp moc_journalcreatorcoverpage.cpp moc_configurationsqlite.cpp moc_editortagmanager.cpp moc_permissionmanager.cpp moc_outputpane.cpp moc_exportsingle.cpp moc_exportmulti.cpp moc_exportcreatedump.cpp moc_customwords.cpp moc_ctextcheckeredit.cpp moc_ctextsyntaxhighlighter.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_editor.cpp moc_dblogin.cpp moc_aboutrj.cpp moc_firstrun.cpp moc_tagger.cpp moc_journalselector.cpp moc_entryexporter.cpp moc_newconfig.cpp moc_configurationgeneral.cpp moc_configurationjournal.cpp moc_configurationmysql.cpp moc_configurationappearance.cpp moc_configurationeditor.cpp moc_configurationexport.cpp moc_exportpreview.cpp moc_tagreminder.cpp moc_newjournalcreator.cpp moc_mysqljournalpage.cpp moc_sqlitejournalpage.cpp moc_journalcreatorcoverpage.cpp moc_configurationsqlite.cpp moc_editortagmanager.cpp moc_permissionmanager.cpp moc_outputpane.cpp moc_exportsingle.cpp moc_exportmulti.cpp moc_exportcreatedump.cpp moc_customwords.cpp moc_ctextcheckeredit.cpp moc_ctextsyntaxhighlighter.cpp
moc_mainwindow.cpp: ui/mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/mainwindow.h -o moc_mainwindow.cpp

moc_editor.cpp: core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		ui/editortagmanager.h \
		ui_editortagmanager.h \
		ui/editor.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/editor.h -o moc_editor.cpp

moc_dblogin.cpp: ui/dblogin.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/dblogin.h -o moc_dblogin.cpp

moc_aboutrj.cpp: ui/aboutrj.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/aboutrj.h -o moc_aboutrj.cpp

moc_firstrun.cpp: ui/firstrun.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/firstrun.h -o moc_firstrun.cpp

moc_tagger.cpp: ui/editortagmanager.h \
		ui/tagger.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/tagger.h -o moc_tagger.cpp

moc_journalselector.cpp: ui/journalselector.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/journalselector.h -o moc_journalselector.cpp

moc_entryexporter.cpp: ui/exportmulti.h \
		ui/exportsingle.h \
		ui/exportcreatedump.h \
		ui/entryexporter.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/entryexporter.h -o moc_entryexporter.cpp

moc_newconfig.cpp: core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui/newconfig.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/newconfig.h -o moc_newconfig.cpp

moc_configurationgeneral.cpp: ui/configurationgeneral.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationgeneral.h -o moc_configurationgeneral.cpp

moc_configurationjournal.cpp: ui/configurationjournal.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationjournal.h -o moc_configurationjournal.cpp

moc_configurationmysql.cpp: ui/configurationmysql.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationmysql.h -o moc_configurationmysql.cpp

moc_configurationappearance.cpp: ui/configurationappearance.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationappearance.h -o moc_configurationappearance.cpp

moc_configurationeditor.cpp: ui/configurationeditor.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationeditor.h -o moc_configurationeditor.cpp

moc_configurationexport.cpp: ui/configurationexport.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationexport.h -o moc_configurationexport.cpp

moc_exportpreview.cpp: ui/exportpreview.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/exportpreview.h -o moc_exportpreview.cpp

moc_tagreminder.cpp: ui/tagreminder.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/tagreminder.h -o moc_tagreminder.cpp

moc_newjournalcreator.cpp: ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/mysqljournalpage.h \
		ui_mysqljournalpage.h \
		ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		ui/newjournalcreator.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/newjournalcreator.h -o moc_newjournalcreator.cpp

moc_mysqljournalpage.cpp: ui/mysqljournalpage.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/mysqljournalpage.h -o moc_mysqljournalpage.cpp

moc_sqlitejournalpage.cpp: ui/sqlitejournalpage.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/sqlitejournalpage.h -o moc_sqlitejournalpage.cpp

moc_journalcreatorcoverpage.cpp: ui/journalcreatorcoverpage.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/journalcreatorcoverpage.h -o moc_journalcreatorcoverpage.cpp

moc_configurationsqlite.cpp: ui/configurationsqlite.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/configurationsqlite.h -o moc_configurationsqlite.cpp

moc_editortagmanager.cpp: ui/editortagmanager.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/editortagmanager.h -o moc_editortagmanager.cpp

moc_permissionmanager.cpp: sql/sqlshield.h \
		ui/permissionmanager.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/permissionmanager.h -o moc_permissionmanager.cpp

moc_outputpane.cpp: ui/outputpane.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/outputpane.h -o moc_outputpane.cpp

moc_exportsingle.cpp: ui/exportsingle.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/exportsingle.h -o moc_exportsingle.cpp

moc_exportmulti.cpp: ui/exportmulti.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/exportmulti.h -o moc_exportmulti.cpp

moc_exportcreatedump.cpp: ui/exportcreatedump.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/exportcreatedump.h -o moc_exportcreatedump.cpp

moc_customwords.cpp: ui/customwords.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ui/customwords.h -o moc_customwords.cpp

moc_ctextcheckeredit.cpp: core/hunspell/ctextsyntaxhighlighter.h \
		core/hunspell/ctextcheckeredit.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) core/hunspell/ctextcheckeredit.h -o moc_ctextcheckeredit.cpp

moc_ctextsyntaxhighlighter.cpp: core/hunspell/ctextsyntaxhighlighter.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) core/hunspell/ctextsyntaxhighlighter.h -o moc_ctextsyntaxhighlighter.cpp

compiler_rcc_make_all: qrc_images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_images.cpp
qrc_images.cpp: images.qrc \
		en_US.dic \
		en_US.aff \
		icons/mysql_icon2.png \
		icons/cross-circle.png \
		icons/folder.png \
		icons/edit-quotation.png \
		icons/arrow-curve.png \
		icons/picture.png \
		icons/highlight-pink.png \
		icons/tag_red_add.png \
		icons/arrow-repeat.png \
		icons/edit-alignment-center.png \
		icons/page_white_copy.png \
		icons/delete.png \
		icons/funnel.png \
		icons/edit-underline.png \
		icons/robojournal.ico \
		icons/document-tree.png \
		icons/spell_swap.png \
		icons/edit-alignment-right.png \
		icons/document-globe.png \
		icons/cut.png \
		icons/arrow_rotate_clockwise.png \
		icons/resultset_first.png \
		icons/resultset_last.png \
		icons/tag_red.png \
		icons/ui-splitter.png \
		icons/pencil-small.png \
		icons/color-swatch.png \
		icons/pencil.png \
		icons/printer.png \
		icons/robojournal-icon.png \
		icons/highlight-green.png \
		icons/add.png \
		icons/spell-check-error.png \
		icons/application.png \
		icons/application_side_expand.png \
		icons/edit-italic.png \
		icons/tag--minus.png \
		icons/latest.png \
		icons/database.png \
		icons/tag_orange.png \
		icons/wrench.png \
		icons/tag--pencil.png \
		icons/server.png \
		icons/bin.png \
		icons/pencil2.png \
		icons/task--plus.png \
		icons/tick-circle.png \
		icons/user-female2.png \
		icons/arrow-curve-180-left.png \
		icons/highlight-orange.png \
		icons/robojournal-icon-big.png \
		icons/disk.png \
		icons/eraser.png \
		icons/book.png \
		icons/node.png \
		icons/highlight-purple.png \
		icons/ui-text-area.png \
		icons/mariadb.png \
		icons/edit-bold.png \
		icons/page_white_database.png \
		icons/na.png \
		icons/page_white_stack.png \
		icons/highlight-cyan.png \
		icons/binocular.png \
		icons/spellcheck_add.png \
		icons/paste_plain.png \
		icons/information.png \
		icons/database-gold.png \
		icons/disconnect.png \
		icons/user.png \
		icons/connect.png \
		icons/prohibition-button.png \
		icons/edit-code.png \
		icons/clear-text.png \
		icons/tag--arrow.png \
		icons/modify2.png \
		icons/external.png \
		icons/page_white.png \
		icons/highlight_yellow'.png \
		icons/application_side_contract.png \
		icons/write2.png \
		icons/bullet_black.png \
		icons/robojournal.png \
		icons/bullet_blue.png \
		icons/database_add.png \
		icons/sqlite_icon.png \
		icons/balloon-quotation.png \
		icons/edit-alignment.png
	/usr/lib/x86_64-linux-gnu/qt4/bin/rcc -name images images.qrc -o qrc_images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_editor.h ui_dblogin.h ui_aboutrj.h ui_firstrun.h ui_tagger.h ui_journalselector.h ui_entryexporter.h ui_newconfig.h ui_configurationgeneral.h ui_configurationjournal.h ui_configurationmysql.h ui_configurationappearance.h ui_configurationeditor.h ui_configurationexport.h ui_exportpreview.h ui_tagreminder.h ui_newjournalcreator.h ui_mysqljournalpage.h ui_sqlitejournalpage.h ui_journalcreatorcoverpage.h ui_configurationsqlite.h ui_editortagmanager.h ui_permissionmanager.h ui_outputpane.h ui_exportsingle.h ui_exportmulti.h ui_exportcreatedump.h ui_customwords.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_editor.h ui_dblogin.h ui_aboutrj.h ui_firstrun.h ui_tagger.h ui_journalselector.h ui_entryexporter.h ui_newconfig.h ui_configurationgeneral.h ui_configurationjournal.h ui_configurationmysql.h ui_configurationappearance.h ui_configurationeditor.h ui_configurationexport.h ui_exportpreview.h ui_tagreminder.h ui_newjournalcreator.h ui_mysqljournalpage.h ui_sqlitejournalpage.h ui_journalcreatorcoverpage.h ui_configurationsqlite.h ui_editortagmanager.h ui_permissionmanager.h ui_outputpane.h ui_exportsingle.h ui_exportmulti.h ui_exportcreatedump.h ui_customwords.h
ui_mainwindow.h: ui/mainwindow.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/mainwindow.ui -o ui_mainwindow.h

ui_editor.h: ui/editor.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/editor.ui -o ui_editor.h

ui_dblogin.h: ui/dblogin.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/dblogin.ui -o ui_dblogin.h

ui_aboutrj.h: ui/aboutrj.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/aboutrj.ui -o ui_aboutrj.h

ui_firstrun.h: ui/firstrun.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/firstrun.ui -o ui_firstrun.h

ui_tagger.h: ui/tagger.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/tagger.ui -o ui_tagger.h

ui_journalselector.h: ui/journalselector.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/journalselector.ui -o ui_journalselector.h

ui_entryexporter.h: ui/entryexporter.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/entryexporter.ui -o ui_entryexporter.h

ui_newconfig.h: ui/newconfig.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/newconfig.ui -o ui_newconfig.h

ui_configurationgeneral.h: ui/configurationgeneral.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationgeneral.ui -o ui_configurationgeneral.h

ui_configurationjournal.h: ui/configurationjournal.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationjournal.ui -o ui_configurationjournal.h

ui_configurationmysql.h: ui/configurationmysql.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationmysql.ui -o ui_configurationmysql.h

ui_configurationappearance.h: ui/configurationappearance.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationappearance.ui -o ui_configurationappearance.h

ui_configurationeditor.h: ui/configurationeditor.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationeditor.ui -o ui_configurationeditor.h

ui_configurationexport.h: ui/configurationexport.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationexport.ui -o ui_configurationexport.h

ui_exportpreview.h: ui/exportpreview.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/exportpreview.ui -o ui_exportpreview.h

ui_tagreminder.h: ui/tagreminder.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/tagreminder.ui -o ui_tagreminder.h

ui_newjournalcreator.h: ui/newjournalcreator.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/newjournalcreator.ui -o ui_newjournalcreator.h

ui_mysqljournalpage.h: ui/mysqljournalpage.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/mysqljournalpage.ui -o ui_mysqljournalpage.h

ui_sqlitejournalpage.h: ui/sqlitejournalpage.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/sqlitejournalpage.ui -o ui_sqlitejournalpage.h

ui_journalcreatorcoverpage.h: ui/journalcreatorcoverpage.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/journalcreatorcoverpage.ui -o ui_journalcreatorcoverpage.h

ui_configurationsqlite.h: ui/configurationsqlite.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/configurationsqlite.ui -o ui_configurationsqlite.h

ui_editortagmanager.h: ui/editortagmanager.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/editortagmanager.ui -o ui_editortagmanager.h

ui_permissionmanager.h: ui/permissionmanager.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/permissionmanager.ui -o ui_permissionmanager.h

ui_outputpane.h: ui/outputpane.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/outputpane.ui -o ui_outputpane.h

ui_exportsingle.h: ui/exportsingle.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/exportsingle.ui -o ui_exportsingle.h

ui_exportmulti.h: ui/exportmulti.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/exportmulti.ui -o ui_exportmulti.h

ui_exportcreatedump.h: ui/exportcreatedump.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/exportcreatedump.ui -o ui_exportcreatedump.h

ui_customwords.h: ui/customwords.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic ui/customwords.ui -o ui_customwords.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp ui/mainwindow.h \
		ui/editor.h \
		core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		ui/editortagmanager.h \
		ui_editortagmanager.h \
		core/buffer.h \
		core/settingsmanager.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: ui/mainwindow.cpp ui/mainwindow.h \
		ui_mainwindow.h \
		ui_editor.h \
		ui/editor.h \
		core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		ui/editortagmanager.h \
		ui_editortagmanager.h \
		core/buffer.h \
		ui/dblogin.h \
		ui_dblogin.h \
		sql/psqlcore.h \
		sql/mysqlcore.h \
		sql/sqlitecore.h \
		ui/aboutrj.h \
		ui_aboutrj.h \
		ui/firstrun.h \
		ui_firstrun.h \
		ui/tagger.h \
		ui_tagger.h \
		ui/journalselector.h \
		ui_journalselector.h \
		ui/entryexporter.h \
		ui/exportmulti.h \
		ui/exportsingle.h \
		ui/exportcreatedump.h \
		ui_entryexporter.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui_newconfig.h \
		ui/tagreminder.h \
		ui_tagreminder.h \
		ui/newjournalcreator.h \
		ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/mysqljournalpage.h \
		ui_mysqljournalpage.h \
		ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		ui_newjournalcreator.h \
		core/taggingshared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o ui/mainwindow.cpp

buffer.o: core/buffer.cpp core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o buffer.o core/buffer.cpp

editor.o: ui/editor.cpp ui/editor.h \
		core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		ui/editortagmanager.h \
		ui_editortagmanager.h \
		ui_editor.h \
		core/buffer.h \
		sql/mysqlcore.h \
		core/htmlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o editor.o ui/editor.cpp

dblogin.o: ui/dblogin.cpp ui/dblogin.h \
		ui_dblogin.h \
		ui/mainwindow.h \
		core/buffer.h \
		core/favoritecore.h \
		sql/mysqlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dblogin.o ui/dblogin.cpp

mysqlcore.o: sql/mysqlcore.cpp sql/mysqlcore.h \
		core/buffer.h \
		ui/editor.h \
		core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		ui/editortagmanager.h \
		ui_editortagmanager.h \
		sql/sqlshield.h \
		ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mysqlcore.o sql/mysqlcore.cpp

psqlcore.o: sql/psqlcore.cpp sql/psqlcore.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o psqlcore.o sql/psqlcore.cpp

sqlitecore.o: sql/sqlitecore.cpp sql/sqlitecore.h \
		core/buffer.h \
		ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlitecore.o sql/sqlitecore.cpp

aboutrj.o: ui/aboutrj.cpp ui/aboutrj.h \
		ui_aboutrj.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aboutrj.o ui/aboutrj.cpp

firstrun.o: ui/firstrun.cpp ui/firstrun.h \
		ui_firstrun.h \
		core/buffer.h \
		ui/newjournalcreator.h \
		ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/mysqljournalpage.h \
		ui_mysqljournalpage.h \
		ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		ui_newjournalcreator.h \
		ui/journalselector.h \
		ui_journalselector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o firstrun.o ui/firstrun.cpp

tagger.o: ui/tagger.cpp ui/tagger.h \
		ui/editortagmanager.h \
		ui_tagger.h \
		sql/mysqlcore.h \
		core/buffer.h \
		core/taggingshared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tagger.o ui/tagger.cpp

journalselector.o: ui/journalselector.cpp ui/journalselector.h \
		ui_journalselector.h \
		sql/mysqlcore.h \
		core/settingsmanager.h \
		core/buffer.h \
		ui/firstrun.h \
		ui_firstrun.h \
		ui/permissionmanager.h \
		sql/sqlshield.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o journalselector.o ui/journalselector.cpp

entryexporter.o: ui/entryexporter.cpp ui/entryexporter.h \
		ui/exportmulti.h \
		ui/exportsingle.h \
		ui/exportcreatedump.h \
		ui_entryexporter.h \
		sql/mysqlcore.h \
		sql/sqlitecore.h \
		core/buffer.h \
		core/htmlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entryexporter.o ui/entryexporter.cpp

newconfig.o: ui/newconfig.cpp ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui_newconfig.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newconfig.o ui/newconfig.cpp

settingsmanager.o: core/settingsmanager.cpp core/settingsmanager.h \
		core/buffer.h \
		ui/firstrun.h \
		ui_firstrun.h \
		ui/newconfig.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settingsmanager.o core/settingsmanager.cpp

configurationgeneral.o: ui/configurationgeneral.cpp ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationgeneral.o ui/configurationgeneral.cpp

configurationjournal.o: ui/configurationjournal.cpp ui/configurationjournal.h \
		ui_configurationjournal.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationjournal.o ui/configurationjournal.cpp

configurationmysql.o: ui/configurationmysql.cpp ui/configurationmysql.h \
		ui_configurationmysql.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		core/favoritecore.h \
		sql/mysqlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationmysql.o ui/configurationmysql.cpp

configurationappearance.o: ui/configurationappearance.cpp ui/configurationappearance.h \
		ui_configurationappearance.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationappearance.o ui/configurationappearance.cpp

configurationeditor.o: ui/configurationeditor.cpp ui/configurationeditor.h \
		ui_configurationeditor.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui/customwords.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationeditor.o ui/configurationeditor.cpp

configurationexport.o: ui/configurationexport.cpp ui/configurationexport.h \
		ui_configurationexport.h \
		core/buffer.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui/exportpreview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationexport.o ui/configurationexport.cpp

exportpreview.o: ui/exportpreview.cpp ui/exportpreview.h \
		ui_exportpreview.h \
		core/buffer.h \
		core/settingsmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exportpreview.o ui/exportpreview.cpp

sqlshield.o: sql/sqlshield.cpp sql/sqlshield.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlshield.o sql/sqlshield.cpp

tagreminder.o: ui/tagreminder.cpp ui/tagreminder.h \
		ui_tagreminder.h \
		core/buffer.h \
		sql/mysqlcore.h \
		ui/tagger.h \
		ui/editortagmanager.h \
		core/settingsmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tagreminder.o ui/tagreminder.cpp

newjournalcreator.o: ui/newjournalcreator.cpp ui/newjournalcreator.h \
		ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/mysqljournalpage.h \
		ui_mysqljournalpage.h \
		ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		ui_newjournalcreator.h \
		core/buffer.h \
		sql/mysqlcore.h \
		sql/sqlitecore.h \
		core/settingsmanager.h \
		ui/firstrun.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newjournalcreator.o ui/newjournalcreator.cpp

mysqljournalpage.o: ui/mysqljournalpage.cpp ui/mysqljournalpage.h \
		ui_mysqljournalpage.h \
		ui/newjournalcreator.h \
		ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		core/buffer.h \
		sql/sqlshield.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mysqljournalpage.o ui/mysqljournalpage.cpp

sqlitejournalpage.o: ui/sqlitejournalpage.cpp ui/sqlitejournalpage.h \
		ui_sqlitejournalpage.h \
		core/buffer.h \
		ui/newjournalcreator.h \
		ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h \
		ui/mysqljournalpage.h \
		ui_mysqljournalpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlitejournalpage.o ui/sqlitejournalpage.cpp

journalcreatorcoverpage.o: ui/journalcreatorcoverpage.cpp ui/journalcreatorcoverpage.h \
		ui_journalcreatorcoverpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o journalcreatorcoverpage.o ui/journalcreatorcoverpage.cpp

configurationsqlite.o: ui/configurationsqlite.cpp ui/configurationsqlite.h \
		ui_configurationsqlite.h \
		ui/newconfig.h \
		core/settingsmanager.h \
		ui/configurationgeneral.h \
		ui_configurationgeneral.h \
		ui/configurationjournal.h \
		ui_configurationjournal.h \
		ui/configurationmysql.h \
		ui_configurationmysql.h \
		ui/configurationappearance.h \
		ui_configurationappearance.h \
		ui/configurationeditor.h \
		ui_configurationeditor.h \
		ui/configurationexport.h \
		ui_configurationexport.h \
		core/buffer.h \
		core/favoritecore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configurationsqlite.o ui/configurationsqlite.cpp

editortagmanager.o: ui/editortagmanager.cpp ui/editortagmanager.h \
		ui_editortagmanager.h \
		core/taggingshared.h \
		ui/editor.h \
		core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		core/buffer.h \
		ui/tagger.h \
		sql/mysqlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o editortagmanager.o ui/editortagmanager.cpp

taggingshared.o: core/taggingshared.cpp core/taggingshared.h \
		core/buffer.h \
		sql/mysqlcore.h \
		sql/sqlshield.h \
		ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o taggingshared.o core/taggingshared.cpp

htmlcore.o: core/htmlcore.cpp core/htmlcore.h \
		core/buffer.h \
		sql/mysqlcore.h \
		ui/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o htmlcore.o core/htmlcore.cpp

permissionmanager.o: ui/permissionmanager.cpp ui/permissionmanager.h \
		sql/sqlshield.h \
		ui_permissionmanager.h \
		sql/mysqlcore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o permissionmanager.o ui/permissionmanager.cpp

outputpane.o: ui/outputpane.cpp ui/outputpane.h \
		ui_outputpane.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputpane.o ui/outputpane.cpp

favoritecore.o: core/favoritecore.cpp core/favoritecore.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o favoritecore.o core/favoritecore.cpp

exportsingle.o: ui/exportsingle.cpp ui/exportsingle.h \
		ui_exportsingle.h \
		core/buffer.h \
		ui/entryexporter.h \
		ui/exportmulti.h \
		ui/exportcreatedump.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exportsingle.o ui/exportsingle.cpp

exportmulti.o: ui/exportmulti.cpp ui/exportmulti.h \
		ui_exportmulti.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exportmulti.o ui/exportmulti.cpp

exportcreatedump.o: ui/exportcreatedump.cpp ui/exportcreatedump.h \
		ui_exportcreatedump.h \
		core/buffer.h \
		core/settingsmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exportcreatedump.o ui/exportcreatedump.cpp

customwords.o: ui/customwords.cpp ui/customwords.h \
		ui_customwords.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o customwords.o ui/customwords.cpp

spellchecker.o: core/hunspell/spellchecker.cpp core/hunspell/spellchecker.h \
		core/hunspell/hunspell.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/hashmgr.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/affixmgr.hxx \
		core/hunspell/atypes.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/baseaffix.hxx \
		core/hunspell/phonet.hxx \
		core/hunspell/replist.hxx \
		core/hunspell/suggestmgr.hxx \
		core/hunspell/langnum.hxx \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spellchecker.o core/hunspell/spellchecker.cpp

suggestmgr.o: core/hunspell/suggestmgr.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/suggestmgr.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/atypes.hxx \
		core/hunspell/hashmgr.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/affixmgr.hxx \
		core/hunspell/baseaffix.hxx \
		core/hunspell/phonet.hxx \
		core/hunspell/replist.hxx \
		core/hunspell/langnum.hxx \
		core/hunspell/csutil.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o suggestmgr.o core/hunspell/suggestmgr.cxx

replist.o: core/hunspell/replist.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/replist.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/w_char.hxx \
		core/hunspell/csutil.hxx \
		core/hunspell/htypes.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o replist.o core/hunspell/replist.cxx

phonet.o: core/hunspell/phonet.cxx core/hunspell/csutil.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/w_char.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/phonet.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o phonet.o core/hunspell/phonet.cxx

hunzip.o: core/hunspell/hunzip.cxx core/hunspell/hunzip.hxx \
		core/hunspell/hunvisapi.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hunzip.o core/hunspell/hunzip.cxx

hunspell.o: core/hunspell/hunspell.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/hunspell.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/hashmgr.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/affixmgr.hxx \
		core/hunspell/atypes.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/baseaffix.hxx \
		core/hunspell/phonet.hxx \
		core/hunspell/replist.hxx \
		core/hunspell/suggestmgr.hxx \
		core/hunspell/langnum.hxx \
		core/hunspell/hunspell.h \
		core/hunspell/csutil.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hunspell.o core/hunspell/hunspell.cxx

hashmgr.o: core/hunspell/hashmgr.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/hashmgr.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/csutil.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/atypes.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hashmgr.o core/hunspell/hashmgr.cxx

filemgr.o: core/hunspell/filemgr.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/hunzip.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filemgr.o core/hunspell/filemgr.cxx

dictmgr.o: core/hunspell/dictmgr.cxx core/hunspell/dictmgr.hxx \
		core/hunspell/hunvisapi.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dictmgr.o core/hunspell/dictmgr.cxx

csutil.o: core/hunspell/csutil.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/csutil.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/w_char.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/atypes.hxx \
		core/hunspell/hashmgr.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/langnum.hxx \
		core/hunspell/utf_info.cxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o csutil.o core/hunspell/csutil.cxx

affixmgr.o: core/hunspell/affixmgr.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/affixmgr.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/atypes.hxx \
		core/hunspell/hashmgr.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/baseaffix.hxx \
		core/hunspell/phonet.hxx \
		core/hunspell/replist.hxx \
		core/hunspell/affentry.hxx \
		core/hunspell/langnum.hxx \
		core/hunspell/csutil.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o affixmgr.o core/hunspell/affixmgr.cxx

affentry.o: core/hunspell/affentry.cxx core/hunspell/license.hunspell \
		core/hunspell/license.myspell \
		core/hunspell/affentry.hxx \
		core/hunspell/hunvisapi.h \
		core/hunspell/atypes.hxx \
		core/hunspell/hashmgr.hxx \
		core/hunspell/htypes.hxx \
		core/hunspell/filemgr.hxx \
		core/hunspell/hunzip.hxx \
		core/hunspell/w_char.hxx \
		core/hunspell/baseaffix.hxx \
		core/hunspell/affixmgr.hxx \
		core/hunspell/phonet.hxx \
		core/hunspell/replist.hxx \
		core/hunspell/csutil.hxx
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o affentry.o core/hunspell/affentry.cxx

ctextcheckeredit.o: core/hunspell/ctextcheckeredit.cpp core/hunspell/ctextcheckeredit.h \
		core/hunspell/ctextsyntaxhighlighter.h \
		core/hunspell/spellchecker.h \
		core/buffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ctextcheckeredit.o core/hunspell/ctextcheckeredit.cpp

ctextsyntaxhighlighter.o: core/hunspell/ctextsyntaxhighlighter.cpp core/hunspell/ctextsyntaxhighlighter.h \
		core/hunspell/spellchecker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ctextsyntaxhighlighter.o core/hunspell/ctextsyntaxhighlighter.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_editor.o: moc_editor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_editor.o moc_editor.cpp

moc_dblogin.o: moc_dblogin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dblogin.o moc_dblogin.cpp

moc_aboutrj.o: moc_aboutrj.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_aboutrj.o moc_aboutrj.cpp

moc_firstrun.o: moc_firstrun.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_firstrun.o moc_firstrun.cpp

moc_tagger.o: moc_tagger.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tagger.o moc_tagger.cpp

moc_journalselector.o: moc_journalselector.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_journalselector.o moc_journalselector.cpp

moc_entryexporter.o: moc_entryexporter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_entryexporter.o moc_entryexporter.cpp

moc_newconfig.o: moc_newconfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_newconfig.o moc_newconfig.cpp

moc_configurationgeneral.o: moc_configurationgeneral.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationgeneral.o moc_configurationgeneral.cpp

moc_configurationjournal.o: moc_configurationjournal.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationjournal.o moc_configurationjournal.cpp

moc_configurationmysql.o: moc_configurationmysql.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationmysql.o moc_configurationmysql.cpp

moc_configurationappearance.o: moc_configurationappearance.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationappearance.o moc_configurationappearance.cpp

moc_configurationeditor.o: moc_configurationeditor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationeditor.o moc_configurationeditor.cpp

moc_configurationexport.o: moc_configurationexport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationexport.o moc_configurationexport.cpp

moc_exportpreview.o: moc_exportpreview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_exportpreview.o moc_exportpreview.cpp

moc_tagreminder.o: moc_tagreminder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tagreminder.o moc_tagreminder.cpp

moc_newjournalcreator.o: moc_newjournalcreator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_newjournalcreator.o moc_newjournalcreator.cpp

moc_mysqljournalpage.o: moc_mysqljournalpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mysqljournalpage.o moc_mysqljournalpage.cpp

moc_sqlitejournalpage.o: moc_sqlitejournalpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sqlitejournalpage.o moc_sqlitejournalpage.cpp

moc_journalcreatorcoverpage.o: moc_journalcreatorcoverpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_journalcreatorcoverpage.o moc_journalcreatorcoverpage.cpp

moc_configurationsqlite.o: moc_configurationsqlite.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configurationsqlite.o moc_configurationsqlite.cpp

moc_editortagmanager.o: moc_editortagmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_editortagmanager.o moc_editortagmanager.cpp

moc_permissionmanager.o: moc_permissionmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_permissionmanager.o moc_permissionmanager.cpp

moc_outputpane.o: moc_outputpane.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputpane.o moc_outputpane.cpp

moc_exportsingle.o: moc_exportsingle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_exportsingle.o moc_exportsingle.cpp

moc_exportmulti.o: moc_exportmulti.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_exportmulti.o moc_exportmulti.cpp

moc_exportcreatedump.o: moc_exportcreatedump.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_exportcreatedump.o moc_exportcreatedump.cpp

moc_customwords.o: moc_customwords.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_customwords.o moc_customwords.cpp

moc_ctextcheckeredit.o: moc_ctextcheckeredit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ctextcheckeredit.o moc_ctextcheckeredit.cpp

moc_ctextsyntaxhighlighter.o: moc_ctextsyntaxhighlighter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ctextsyntaxhighlighter.o moc_ctextsyntaxhighlighter.cpp

qrc_images.o: qrc_images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_images.o qrc_images.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/bin/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/bin/ 


install_shortcut: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/applications/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/applications/ 
	-$(INSTALL_FILE) /home/will/qt_projects/robojournal/menus/robojournal.desktop $(INSTALL_ROOT)/usr/share/applications/


uninstall_shortcut:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/applications/robojournal.desktop
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/applications/ 


install_icon: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/icons/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/icons/ 
	-$(INSTALL_FILE) /home/will/qt_projects/robojournal/robojournal64.png $(INSTALL_ROOT)/usr/share/icons/


uninstall_icon:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/icons/robojournal64.png
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/icons/ 


install_shortcut-deb: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/menu/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/menu/ 
	-$(INSTALL_FILE) /home/will/qt_projects/robojournal/menus/robojournal $(INSTALL_ROOT)/usr/share/menu/


uninstall_shortcut-deb:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/menu/robojournal
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/menu/ 


install_icon-deb: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/pixmaps/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/pixmaps/ 
	-$(INSTALL_FILE) /home/will/qt_projects/robojournal/menus/robojournal.xpm $(INSTALL_ROOT)/usr/share/pixmaps/


uninstall_icon-deb:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/pixmaps/robojournal.xpm
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/pixmaps/ 


install_man: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/man/man7/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/man/man7/ 
	-$(INSTALL_FILE) /home/will/qt_projects/robojournal/robojournal.7.gz $(INSTALL_ROOT)/usr/share/man/man7/


uninstall_man:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/man/man7/robojournal.7.gz
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/man/man7/ 


install:  install_target install_shortcut install_icon install_shortcut-deb install_icon-deb install_man  FORCE

uninstall: uninstall_target uninstall_shortcut uninstall_icon uninstall_shortcut-deb uninstall_icon-deb uninstall_man   FORCE

FORCE:

